    public static class Pointer extends VulkanObject.Pointer {
        public Pointer(%%VKNAME%%.Pointer p) {
            super(p);
        }

        public Pointer(){
            this(new %%VKNAME%%.Pointer());
        }

        public Pointer(long value) {
            this(new %%VKNAME%%.Pointer(value));
        }

        @Override
        public %%VKNAME%%.Pointer getVk(){
            return (%%VKNAME%%.Pointer) super.getVk();
        }

        public static class Array extends %%VULKANNAME%%.Pointer implements cz.mg.collections.array.ReadonlyArray<%%VULKANNAME%%.Pointer> {
            public Array(int count) {
                super(new %%VKNAME%%.Pointer.Array(count));
            }

            public Array(%%VULKANNAME%%[] a) {
                this(a.length);
                for(int i = 0; i < a.length; i++) get(i).setValue(a[i].getVk().getVkAddress());
            }

            @Override
            public %%VKNAME%%.Pointer.Array getVk(){
                return (%%VKNAME%%.Pointer.Array) super.getVk();
            }

            @Override
            public int count(){
                return getVk().count();
            }

            @Override
            public %%VULKANNAME%%.Pointer get(int i){
                return new %%VULKANNAME%%.Pointer(getVk().get(i));
            }
        }
    }