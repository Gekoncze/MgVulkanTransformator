package cz.mg.vulkantransformator.gui;

import cz.mg.collections.text.Text;
import cz.mg.vulkantransformator.Configuration;
import cz.mg.vulkantransformator.Transformator;
import cz.mg.vulkantransformator.utilities.DebugUtilities;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.nio.file.Paths;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;


public class MainWindow extends javax.swing.JFrame {
    private static MainWindow instance = null;
    private static final String DEFAULT_OUTPUT_DIRECTORY = Configuration.DEFAULT_OUTPUT_DIRECTORY_PATH.toString();

    public static MainWindow getInstance() {
        return instance;
    }

    private final JFileChooser fileChooser = new JFileChooser(Paths.get(".").toFile());
    private final JFileChooser directoryChooser = new JFileChooser(Paths.get(".").toFile());

    public MainWindow() {
        initComponents();
        pack();
        setLocationRelativeTo(null);
        Enumeration<AbstractButton> buttons = buttonGroupVersion.getElements();
        while(buttons.hasMoreElements()){
            AbstractButton button = buttons.nextElement();
            button.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    updateLocks();
                }
            });
        }
        updateLocks();
        jTextFieldOutputPath.setText(DEFAULT_OUTPUT_DIRECTORY);
    }

    private void generate(){
        jLabelStatus.setText("Generating...");
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    Transformator transformator = new Transformator(getVersion(), getInputPath(), getOutputPath());
                    transformator.run();
                    jLabelStatus.setText("Files generated successfully!");
                } catch(Exception e){
                    showError(e);
                    jLabelStatus.setText("ERROR");
                }

            }
        });
    }

    private Transformator.Version getVersion(){
        if(jRadioButtonVersion10.isSelected()) return Transformator.Version.VERSION_1_0;
        if(jRadioButtonVersion11.isSelected()) return Transformator.Version.VERSION_1_1;
        if(jRadioButtonVersionOther.isSelected()) return Transformator.Version.VERSION_OTHER;
        throw new RuntimeException();
    }

    private Text getInputPath(){
        return new Text(jTextFieldInputPath.getText());
    }

    private Text getOutputPath(){
        return new Text(jTextFieldOutputPath.getText());
    }

    private void showError(Exception e){
        JOptionPane.showMessageDialog(this, e.getClass().getSimpleName() + ": " + e.getMessage(), e.getClass().getSimpleName(), JOptionPane.ERROR_MESSAGE);
        new ErrorLog(DebugUtilities.stackTraceToString(e)).setVisible(true);
    }

    private void chooseFile(){
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setMultiSelectionEnabled(false);
        if(fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            File selectedFile = fileChooser.getSelectedFile();
            if(selectedFile != null) this.jTextFieldInputPath.setText(selectedFile.getAbsolutePath().toString());
        }
    }

    private void chooseDirectory(){
        directoryChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        directoryChooser.setMultiSelectionEnabled(false);
        if(directoryChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            File selectedDirectory = directoryChooser.getCurrentDirectory();
            if(selectedDirectory != null) this.jTextFieldOutputPath.setText(selectedDirectory.getAbsolutePath().toString());
        }
    }

    private void updateLocks(){
        boolean s = jRadioButtonVersionOther.isSelected();
        jTextFieldInputPath.setEnabled(s);
        jButtonChooseFile.setEnabled(s);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupVersion = new javax.swing.ButtonGroup();
        jPanelComponents = new javax.swing.JPanel();
        jPanelInput = new javax.swing.JPanel();
        jPanelInputComponents = new javax.swing.JPanel();
        jRadioButtonVersion10 = new javax.swing.JRadioButton();
        jRadioButtonVersion11 = new javax.swing.JRadioButton();
        jPanelVersionOther = new javax.swing.JPanel();
        jRadioButtonVersionOther = new javax.swing.JRadioButton();
        jTextFieldInputPath = new javax.swing.JTextField();
        jButtonChooseFile = new javax.swing.JButton();
        jPanelOutput = new javax.swing.JPanel();
        jPanelOutputComponents = new javax.swing.JPanel();
        jPanelOutputDirectory = new javax.swing.JPanel();
        jLabelDirectory = new javax.swing.JLabel();
        jTextFieldOutputPath = new javax.swing.JTextField();
        jButtonChooseDirectory = new javax.swing.JButton();
        jPanelGenerate = new javax.swing.JPanel();
        jLabelStatus = new javax.swing.JLabel();
        jButtonGenerate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MgVulkanTransformator");
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWeights = new double[] {1.0};
        layout.rowWeights = new double[] {1.0};
        getContentPane().setLayout(layout);

        java.awt.GridBagLayout jPanelComponentsLayout = new java.awt.GridBagLayout();
        jPanelComponentsLayout.columnWeights = new double[] {1.0};
        jPanelComponents.setLayout(jPanelComponentsLayout);

        jPanelInput.setBorder(javax.swing.BorderFactory.createTitledBorder("Input"));
        java.awt.GridBagLayout jPanelInputLayout = new java.awt.GridBagLayout();
        jPanelInputLayout.columnWeights = new double[] {1.0};
        jPanelInputLayout.rowWeights = new double[] {1.0};
        jPanelInput.setLayout(jPanelInputLayout);

        java.awt.GridBagLayout jPanelInputComponentsLayout = new java.awt.GridBagLayout();
        jPanelInputComponentsLayout.columnWeights = new double[] {1.0};
        jPanelInputComponents.setLayout(jPanelInputComponentsLayout);

        buttonGroupVersion.add(jRadioButtonVersion10);
        jRadioButtonVersion10.setText("Vulkan 1.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanelInputComponents.add(jRadioButtonVersion10, gridBagConstraints);

        buttonGroupVersion.add(jRadioButtonVersion11);
        jRadioButtonVersion11.setSelected(true);
        jRadioButtonVersion11.setText("Vulkan 1.1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanelInputComponents.add(jRadioButtonVersion11, gridBagConstraints);

        java.awt.GridBagLayout jPanelCustomFileLayout = new java.awt.GridBagLayout();
        jPanelCustomFileLayout.columnWeights = new double[] {0.0, 1.0, 0.0};
        jPanelVersionOther.setLayout(jPanelCustomFileLayout);

        buttonGroupVersion.add(jRadioButtonVersionOther);
        jRadioButtonVersionOther.setText("Other");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        jPanelVersionOther.add(jRadioButtonVersionOther, gridBagConstraints);

        jTextFieldInputPath.setToolTipText("Vulkan core header path");
        jTextFieldInputPath.setMinimumSize(new java.awt.Dimension(256, 19));
        jTextFieldInputPath.setName(""); // NOI18N
        jTextFieldInputPath.setPreferredSize(new java.awt.Dimension(256, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        jPanelVersionOther.add(jTextFieldInputPath, gridBagConstraints);

        jButtonChooseFile.setText("...");
        jButtonChooseFile.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChooseFileActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanelVersionOther.add(jButtonChooseFile, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanelInputComponents.add(jPanelVersionOther, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanelInput.add(jPanelInputComponents, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanelComponents.add(jPanelInput, gridBagConstraints);

        jPanelOutput.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));
        java.awt.GridBagLayout jPanelOutputLayout = new java.awt.GridBagLayout();
        jPanelOutputLayout.columnWeights = new double[] {1.0};
        jPanelOutputLayout.rowWeights = new double[] {1.0};
        jPanelOutput.setLayout(jPanelOutputLayout);

        java.awt.GridBagLayout jPanelOutputComponentsLayout = new java.awt.GridBagLayout();
        jPanelOutputComponentsLayout.columnWeights = new double[] {1.0};
        jPanelOutputComponents.setLayout(jPanelOutputComponentsLayout);

        java.awt.GridBagLayout jPanelOutputDirectoryLayout = new java.awt.GridBagLayout();
        jPanelOutputDirectoryLayout.columnWeights = new double[] {0.0, 1.0, 0.0};
        jPanelOutputDirectory.setLayout(jPanelOutputDirectoryLayout);

        jLabelDirectory.setText("Directory");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        jPanelOutputDirectory.add(jLabelDirectory, gridBagConstraints);

        jTextFieldOutputPath.setMinimumSize(new java.awt.Dimension(256, 19));
        jTextFieldOutputPath.setPreferredSize(new java.awt.Dimension(256, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        jPanelOutputDirectory.add(jTextFieldOutputPath, gridBagConstraints);

        jButtonChooseDirectory.setText("...");
        jButtonChooseDirectory.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChooseDirectoryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanelOutputDirectory.add(jButtonChooseDirectory, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 4, 0);
        jPanelOutputComponents.add(jPanelOutputDirectory, gridBagConstraints);

        java.awt.GridBagLayout jPanelGenerateLayout = new java.awt.GridBagLayout();
        jPanelGenerateLayout.columnWeights = new double[] {1.0, 0.0};
        jPanelGenerate.setLayout(jPanelGenerateLayout);

        jLabelStatus.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        jPanelGenerate.add(jLabelStatus, gridBagConstraints);

        jButtonGenerate.setText("Generate");
        jButtonGenerate.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanelGenerate.add(jButtonGenerate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanelOutputComponents.add(jPanelGenerate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanelOutput.add(jPanelOutputComponents, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanelComponents.add(jPanelOutput, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        getContentPane().add(jPanelComponents, gridBagConstraints);

        pack();
    }// </editor-fold>

    private void jButtonChooseFileActionPerformed(java.awt.event.ActionEvent evt) {
        chooseFile();
    }

    private void jButtonGenerateActionPerformed(java.awt.event.ActionEvent evt) {
        generate();
    }

    private void jButtonChooseDirectoryActionPerformed(java.awt.event.ActionEvent evt) {
        chooseDirectory();
    }
    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                instance = new MainWindow();
                instance.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.ButtonGroup buttonGroupVersion;
    private javax.swing.JButton jButtonChooseDirectory;
    private javax.swing.JButton jButtonChooseFile;
    private javax.swing.JButton jButtonGenerate;
    private javax.swing.JLabel jLabelDirectory;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JPanel jPanelComponents;
    private javax.swing.JPanel jPanelGenerate;
    private javax.swing.JPanel jPanelInput;
    private javax.swing.JPanel jPanelInputComponents;
    private javax.swing.JPanel jPanelOutput;
    private javax.swing.JPanel jPanelOutputComponents;
    private javax.swing.JPanel jPanelOutputDirectory;
    private javax.swing.JPanel jPanelVersionOther;
    private javax.swing.JRadioButton jRadioButtonVersion10;
    private javax.swing.JRadioButton jRadioButtonVersion11;
    private javax.swing.JRadioButton jRadioButtonVersionOther;
    private javax.swing.JTextField jTextFieldInputPath;
    private javax.swing.JTextField jTextFieldOutputPath;
    // End of variables declaration
}
