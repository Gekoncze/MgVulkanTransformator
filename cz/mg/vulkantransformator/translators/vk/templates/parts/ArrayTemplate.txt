    public static class Array extends %%VKNAME%% implements cz.mg.collections.array.ReadonlyArray<%%VKNAME%%> {
        private final int count;

        public Array(int count) {
            super(new VkMemory(count*%%VKNAME%%.sizeof()));
            this.count = count;
        }

        public Array(%%VKNAME%% o, int count){
            super(o.getVkMemory(), o.getVkAddress());
            this.count = count;
        }

        public Array(VkPointer pointer, int count){
            super(pointer);
            this.count = count;
        }

        protected Array(VkMemory vkmemory, int count) {
            super(vkmemory);
            this.count = count;
        }

        protected Array(VkMemory vkmemory, long vkaddress, int count) {
            super(vkmemory, vkaddress);
            this.count = count;
        }

%%ARRAYSPECS%%

%%ARRAYPARTIALSPECS%%

        @Override
        public int count(){
            return count;
        }

        @Override
        public %%VKNAME%% get(int i){
            return new %%VKNAME%%(getVkMemory(), address(i));
        }

        protected long address(int i){
            return VkPointer.plus(getVkAddress(), sizeof()*i);
        }

        public static class Array2 extends VkPointer.Array {
            public Array2(int count) {
                super(count);
            }

            protected Array2(VkMemory vkmemory, int count) {
                super(vkmemory, count);
            }

            protected Array2(VkMemory vkmemory, long vkaddress, int count) {
                super(vkmemory, vkaddress, count);
            }
        }
    }